#!/usr/bin/env perl

# This script create oui database from http://standards.ieee.org/regauth/oui/oui.txt

use strict;
use warnings;
use threads;
use WWW::Curl::Easy;

# Url which contains oui standard
my $oui_file_url = "http://standards.ieee.org/regauth/oui/oui.txt";

# Oui database file
my $oui_db = "./selib/oui_db.txt";

my $oui_regex = "[0-9A-F][0-9A-F]-[0-9A-F][0-9A-F]-[0-9A-F][0-9A-F]";

open(my $db,  ">", $oui_db) or die("[ERROR] can't open db file: $!");
print($db "# Oui database\n# Autogenerated from 'create_ouidb.pl'\n\n\n");
close($db);

open($db,  ">>", $oui_db) or die("[ERROR] can't open db file: $!");

print("+ Retrieving original oui file ($oui_file_url).....");

threads->create(\&callback)->join();

sub callback
{
    # Content of original oui file
    my $oui_file_orig;

    my $curl = new WWW::Curl::Easy;
    $curl->setopt(CURLOPT_URL, $oui_file_url);
    open(my $buf, ">", \$oui_file_orig);
    $curl->setopt(CURLOPT_WRITEDATA, $buf);
    my $retcode = $curl->perform;

    close($buf);
    
    if($retcode == 0)
    {
	my $response_code = $curl->getinfo(CURLINFO_HTTP_CODE);
	
	if($response_code != 200)
	{
	    print("FAIL\n");
	    print("! [ERROR] Received $response_code response code\n");
	    close($db);
	    exit -1;
	}
	else
	{
	    print("DONE\n");
	    print("+ Creating oui database.....");
	    
	    # Get lines
	    while($oui_file_orig =~ /(.*)/g)
	    {
		my $line = $1;
		if($line =~ /^$oui_regex/)
		{
		    $line =~ /($oui_regex)(\s*(\(hex\))\s*)([\w.\/&\s]+)/g;
		    my $oui = $1;
		    my $company = $4;
		    
		    $oui =~ s/-/:/g;
		    $company =~ s/\n//g;
		    
		    print($db "$oui|$company\n");
		}
	    }
	    
	    print("DONE\n");
	    close($db);
	}
    }
    else
    {
	print("FAIL\n");
	print("! [ERROR] ".$curl->strerror($retcode)." ($retcode)\n");
	close($db);
	exit -1;
    }
}
